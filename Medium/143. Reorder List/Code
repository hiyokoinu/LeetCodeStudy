# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reorderList(self, head: ListNode) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        slow, fast = head, head.next
        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next

        second_head = slow.next
        #reverse second half
        slow.next = num = None
        while second_head:
            nxt = second_head.next
            second_head.next = num
            num = second_head
            second_head = nxt
        
        #merge
        first, second = head, num
        while second:
            l1, l2 = first.next, second.next
            first.next = second
            second.next = l1
            first, second = l1, l2
